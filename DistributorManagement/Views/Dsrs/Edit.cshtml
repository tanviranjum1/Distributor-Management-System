@model DistributorManagement.ViewModels.DsrAreaViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit Dsr</h2>
<hr />
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("DSR ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @id = "dsr-id", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id="dsr-name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "dsr-address" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", @id = "dsr-contact" } })
                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NationalID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NationalID, new { htmlAttributes = new { @class = "form-control", @id = "dsr-nid" } })
                @Html.ValidationMessageFor(model => model.NationalID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Area", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AreaID", null, htmlAttributes: new { @class = "form-control", multiple = "multiple" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success"  />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })
            </div>
        </div>
    </div>
}



@section Styles{
    @Styles.Render("~/Content/chosen");
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/chosen");

    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js">  </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/js/bootstrap-datetimepicker.min.js"></script>


    <script>
        $(function () {
            $("#AreaID").select2();
        });


        //function submitbtn() {
        //    var dropdownAreas = $('#chosen-area option:selected')
        //                     .toArray().map(item => item.value);
        //    var rows = [];
        //    for (var i = 0; i < dropdownAreas.length; i++) {
        //        var rowData = {
        //            'DsrID': $("#dsr-id").val(),
        //            'AreaID': dropdownAreas[i],
        //        };
        //        rows.push(rowData);
        //    }

        //    var inputData = {
        //        'Dsr': {
        //            'ID': $("#dsr-id").val(),
        //            'Name': $("#dsr-name").val(),
        //            'Address': $("#dsr-address").val(),
        //            'Contact': $("#dsr-contact").val(),
        //            'NationalID': $("#dsr-nid").val(),
        //        },
        //        'DsrArea': rows
        //    };
        //    $.post('/Dsrs/editDsrArea', inputData,
        //        function (data, status) {
        //            if (data.success) {
        //                alert("Operation Successful.");
        //            }
        //        });
        //}

        $("#AreaID").val([@string.Join(",", Model.AreaID.ToArray())]).trigger("change");


    </script>



}
