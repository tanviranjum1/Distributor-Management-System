@{
    ViewBag.Title = "New Sale Register";
}

<style>
    td {
        font-weight: normal;
    }
</style>

<h2 style="text-align:center;">New Sale Register</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row alert alert-info" role="alert">
        <div class="form-horizontal">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("From", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.Editor("fromdate", new { htmlAttributes = new { @class = "form-control" , @Value = @DateTime.Today.ToString("dd-MMM-yyyy") } })
                        @Html.ValidationMessage("From", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("To", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.Editor("todate", new { htmlAttributes = new { @class = "form-control", @Value = @DateTime.Today.ToString("dd-MMM-yyyy") } })
                        @Html.ValidationMessage("To", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Reg Date", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.Editor("regdate", new { htmlAttributes = new { @class = "form-control", @Value = @DateTime.Today.ToString("dd-MMM-yyyy") } })
                        @Html.ValidationMessage("RegistrationDate", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Dsr", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("dsrs", (IEnumerable<SelectListItem>)ViewBag.DsrID, new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Area", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("areas", (IEnumerable<SelectListItem>)ViewBag.AreaID, new { @class = "form-control" })
                    </div>
                </div>
            </div>


            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Company", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("manufacturers", (IEnumerable<SelectListItem>)ViewBag.ManufacturerID, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Product", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("products", Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Sr", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("srs", (IEnumerable<SelectListItem>)ViewBag.SrID, new { @class = "form-control"})
                    </div>
                </div>
            </div> 
            
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Total Invoice", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.Editor("totinvoice", new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>   
        </div>
      </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row alert alert-info" role="alert">
        <div class="form-horizontal">
            <div class="row">
                <div class="col-md-4">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Retailer", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("customers", (IEnumerable<SelectListItem>)ViewBag.CustomerID, String.Empty, new { @class = "form-control"})
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.Label("Invoice No", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.Editor("invoiceno", new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.Label("Due Amount", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.Editor("invoiceam", new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.Label("Gift Item", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.Editor("gift", new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-md-offset-1">
                        <a id="add" href="#" onclick="addRow();" class="btn btn-primary">Add</a>
                 </div>
            </div>
        </div>
    </div>
}
<br>
<br>

<table id="dataTable" style="border-top: 2px solid gray;  margin: auto; text-align:center; font-weight: bold; width:95%;" class="table table-bordered table-condensed">
    <thead>
        <tr>
            <th style="text-align:center; display:none;">Retailer ID</th>
            <th style="text-align:left;">Retailer Name</th>
            <th style="text-align:left;">Invoice Number</th>
            <th style="text-align:center">Due Amount</th>
            <th style="text-align:left;">Gift Item</th>
            <th style="text-align:center;">Action</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
    <tfoot>
        <tr>
            <td colspan="2" style="text-align:center; font-weight:bold;">Total: </td>
            <td style="text-align:right" id="total-amount">0</td>
        </tr>
    </tfoot>
</table>
<br>
<br>

<br />
<div style="text-align:center">
    <button id="save" onclick="save()" class="btn btn-success" style="text-align:center;">Save </button>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })
</div>
<br />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js">  </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/Scripts/CustomValidations.js"></script>

    <script>
        var totalDueAmount = 0;
        var errorColor = "#eccfcf";
        var defaultColor = "#FFFFFF";

        $(document).ready(function () {
            $("#customers").select2();
            $("#areas").select2();
            $("#manufacturers").select2();
            $("#srs").select2();
            $("#dsrs").select2();
            $("#products").select2();
        });

        $(document).ready(function () {
            $('#fromdate').datetimepicker({
                showClear: true,
                format: "DD-MMM-YYYY"
            });
            $('#todate').datetimepicker({
                showClear: true,
                format: "DD-MMM-YYYY" 
            });
            $('#regdate').datetimepicker({
                showClear: true,
                format: "DD-MMM-YYYY"
            });
        });


        $("#manufacturers").change(function () {
            if ($("#manufacturers option:selected").text() == "") {
                $("#products").empty();
            }
            else {
                $("#products").empty();
                var ddl = document.getElementById("products");
                var option = document.createElement("OPTION");
                option.innerHTML = "";
                option.value = "";
                ddl.options.add(option);
                $.get('/SalesRegisters/getProducts',
                function (data, status) {
                    for (i = 0; i < data.Product.length; i++) {
                        if (data.Product[i].ManufacturerID == $("#manufacturers").val()) {
                            var ddl = document.getElementById("products");
                            var option = document.createElement("OPTION");
                            option.innerHTML = data.Product[i].Name;
                            option.value = data.Product[i].ID;
                            ddl.options.add(option);
                        }
                    }
                });
            }
        });

        //add areas upon dsr selection
        $("#dsrs").change(function () {
            if ($("#dsrs option:selected").text() == "") {
                $("#areas").empty();
            }
            else {
                $("#areas").empty();
                var ddl = document.getElementById("areas");
                var option = document.createElement("OPTION");
                option.innerHTML = "";
                option.value = "";
                ddl.options.add(option);
                $.get('/SalesRegisters/getAreas',
                function (data, status) {
                    for (i = 0; i < data.DsrArea.length; i++) {
                        if (data.DsrArea[i].DsrID == $("#dsrs").val()) {
                            var ddl = document.getElementById("areas");
                            var option = document.createElement("OPTION");
                            option.innerHTML = data.DsrArea[i].Area.Name;
                            option.value = data.DsrArea[i].Area.ID;
                            ddl.options.add(option);
                        }
                    }
                });
            }
        });

        function loadDetails() {

            if ($("#products option:selected").text() == "" || $("#areas option:selected").text() == "") {
                console.log("Null state");
            }
            else {
                $("#dataTable tr td").remove();
                $.get('/SalesRegisters/getRetailerProducts',
                     function (data, status) {
                         for (i = 0; i < data.RetailerProduct.length; i++) {
                             if (data.RetailerProduct[i].ProductID == $("#products").val()) {
                                 $("#dataTable tbody").append(
                                     '<tr><td style="display:none;" class="customer-id" >' + data.RetailerProduct[i].CustomerID + '</td>' +
                                     '<td class="customername" style="text-align:left;" >' + data.RetailerProduct[i].Customer.Name + '</td>' +
                                     '<td class="invoiceno" contenteditable="true" style="text-align:left;" onkeyup="isValidWithError(this, \'Invoice Number\', false, false, true, false, false, null, null, false, \'' + errorColor + '\', \'' + defaultColor + '\');" ></td>' +
                                     '<td class="invoiceam" contenteditable="true" style="text-align:right;" onkeyup="dueEvent(this)">' + 0 +' </td>' +
                                     '<td class="gift" contenteditable="true" style="text-align:left;"  ></td>' +
                                     '<td><button id="edit" onclick="editRow(this);" class="btn btn-warning btn-sm">Edit </button> <button id="delete" onclick="delRow(this);"  class="btn btn-danger btn-sm">Delete </button>  </td></tr>'
                                 );   
                             }
                         }
                         $("#dataTable tfoot").append('<tr >' +
                          '<td colspan="2" style="text-align:center; font-weight:bold">Total :</td>' +
                          '<td style="text-align:right" id="total-amount">' + 0 + '</td>' + '</tr>');
                     });
            }
        }


        $("#areas").change(function () {
            loadDetails();
        });

        $("#products").change(function () {
            loadDetails();
        });


        //function validateTableData(tableId) {

        //    var table = document.getElementById(tableId);
        //    var errorCount = 0;

        //    for (var i = 1, row; row = table.rows[i]; i++) {

        //        if (!isValidWithError(row.cells[2], 'Invoice Number', false, false, true, false, false, null, null, false, errorColor, defaultColor))
        //        {
        //            errorCount++;
        //        }
        //        if (!isValidWithError(row.cells[3], 'Invoice Amount', false, false, true, true, false, 1, null, false, errorColor, defaultColor))
        //        {
        //            errorCount++;
        //        }
        //    }
        //    if (errorCount) {
        //        return false;
        //    }
        //    else {
        //        return true;
        //    }
        //}

        function ValidateData() {

            if (document.getElementById("fromdate").value == "") {
                alert("Please Enter From Date Information");
                return false;
            }
            if (document.getElementById("todate").value == "") {
                alert("Please Enter To Date Information");
                return false;
            }
            if (document.getElementById("regdate").value == "") {
                alert("Please Enter Registration Date");
                return false;
            }
            if (document.getElementById("dsrs").value == "") {
                alert("Please Select Dsr");
                return false;
            }
            if (document.getElementById("areas").value == "") {
                alert("Please Select Area");
                return false;
            }
            if (document.getElementById("manufacturers").value == "") {
                alert("Please Select Company");
                return false;
            }
            if (document.getElementById("products").value == "") {
                alert("Please Select Product");
                return false;
            }
            if (document.getElementById("srs").value == "") {
                alert("Please Select Sr");
                return false;
            }
            if (document.getElementById("totinvoice").value == "") {
                alert("Please Enter Total Invoice Amount");
                return false;
            }
            return true;
        }


        function dueEvent(rowObj){
            //isValidWithError(this, \'Invoice Amount\', false, false, true, true, false, 1, null, false, \'' + errorColor + '\', \'' + defaultColor + '\');" >0</td>'
            
            totalDueAmount = 0;
            $("#dataTable tbody tr").each(function () {
                totalDueAmount += parseInt($(this).find('.invoiceam').text());
            });
            console.log(totalDueAmount);
         
            document.getElementById("total-amount").innerText = totalDueAmount;

            isValidWithError(rowObj, 'Invoice Amount', false, false, true, true, false, 1, null, false, errorColor, defaultColor);

        }

        var editStat = false;
        var currObj = null;

        function editRow(rowObj) {
            var dpvalue = $(rowObj).parent().parent().find(".customer-id").text();
            $("#customers").val(dpvalue).trigger('change');
            $("#invoiceno").val($(rowObj).parent().parent().find(".invoiceno").text());
            var due = parseFloat($(rowObj).parent().parent().find(".invoiceam").text());
            $("#invoiceam").val(due);
            $("#gift").val($(rowObj).parent().parent().find(".gift").text());
            editStat = true;
            currObj = rowObj;
            totalDueAmount -= due;
        }

        function addRow() {
   
            if (!ValidateData())
            {
                //validation fails.
            }
            if (!$("#customers").val()) {
                alert("Add Retailer.");
            }
            else if (!isValidWithError($("#invoiceno"), 'Invoice Number', true, false, true, false, false, null, null, false, errorColor, defaultColor)) {
                alert("Add valid invoice number.");
            }
            else if (!isValidWithError($("#invoiceam"), 'Invoice Amount', true, false, true, true, false, 1, null, false, errorColor, defaultColor)) {
                alert("Add valid invoice amount.");
            }
            else {
                if (editStat) {
                    $(currObj).parent().parent().find(".customer-id").text($("#customers").val());
                    $(currObj).parent().parent().find(".customername").text($("#customers option:selected").text());
                    $(currObj).parent().parent().find(".invoiceno").text($("#invoiceno").val());
                    $(currObj).parent().parent().find(".invoiceam").text($("#invoiceam").val());
                    $(currObj).parent().parent().find(".gift").text($("#gift").val());
                    totalDueAmount += parseInt($("#invoiceam").val());
                    editStat = false;
                    currObj = null;
                }
                else {
                    totalDueAmount += parseInt($("#invoiceam").val());
                    $("#dataTable").append(
                        '<tr><td class="customer-id" style="display:none">' + $("#customers option:selected").val() + '</td>' +
                        '<td class="customername" style="text-align:left;" >' + $("#customers option:selected").text() + '</td>' +
                        '<td class="invoiceno" contenteditable="true" style="text-align:left;" onkeyup="isValidWithError(this, \'Invoice Number\', false, false, true, false, false, null, null, false, \'' + errorColor + '\', \'' + defaultColor + '\');" >' + $("#invoiceno").val() + '</td>' +
                        '<td class="invoiceam" contenteditable="true" style="text-align:right;"  onkeyup="dueEvent(this)" >' + $("#invoiceam").val() + '</td>' +
                        '<td class="gift" contenteditable="true" style="text-align:left;" >' + $("#gift").val() + '</td>' +
                        '<td><button id="edit" onclick="editRow(this);" class="btn btn-warning btn-sm">Edit </button> <button id="delete" onclick="delRow(this);"  class="btn btn-danger btn-sm">Delete </button>  </td></tr>'
                    );
                }
                document.getElementById("total-amount").innerText = totalDueAmount;
            }
        }

        function delRow(rowObj) {
            var amount = parseInt($(rowObj).parent().parent().find(".invoiceam").text());
            totalDueAmount -= amount;
            document.getElementById("total-amount").innerText = totalDueAmount;
            $(rowObj).parent().parent().remove();
        }

        function save() {

            if (!ValidateData()) {
                return;
            }

            //if (!validateTableData("dataTable")) {
            //    alert("Please correct your inputs.");
            //    return;
            //}

            var rows = [];
            $("#dataTable tbody tr").each(function () {
                var rowData = {
                    'CustomerID': $(this).find(".customer-id") ? $(this).find(".customer-id").text() : "",
                    'InvoiceNumber': $(this).find(".invoiceno").text() ? $(this).find(".invoiceno").text() : "",
                    'InvoiceAmount': $(this).find(".invoiceam").text() ? $(this).find(".invoiceam").text() : "",
                    'GiftItem': $(this).find(".gift").text(),
                };
                rows.push(rowData);
            });
            console.log(rows);
        
            var inputData = {
                'SalesRegister': {
                    'From': $("#fromdate").val(),
                    'To': $("#todate").val(),
                    'RegistrationDate': $("#regdate").val(),
                    'DsrID': $("#dsrs option:selected").val(),
                    'SrID': $("#srs option:selected").val(),
                    'ManufacturerID': $("#manufacturers option:selected").val(),
                    'AreaID': $("#areas option:selected").val(),
                    'ProductID': $("#products option:selected").val(),
                    'TotalInvoiceAmount': $("#totinvoice").val()
                },
                'SalesRegisterDetails': rows
            };

            $.post('/SalesRegisters/insertSalesRegister', inputData,
                function (data, status) {
                    if (data.success) {
                        alert("Operation Successful.");
                        window.location.href = "/SalesRegisters";
                    }
                });
        }
    </script>
}
